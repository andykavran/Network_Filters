colnames(growth_data) = c("Sample", "Replicate", "Treatment Schedule", "Days", "Cell Number")
basesize = 22
pointsize = 4
errorwidth = 1
errorsize = 1
linesize = 2
v600e <- growth_data %>% filter(Sample == "V600E")
mean_agg <- v600e$`Cell Number` %>% aggregate(by = list(sample = v600e$Sample, schedule = v600e$`Treatment Schedule`, day = v600e$Days), mean)
base_line = mean_agg %>% filter(schedule == "Continuous", day == 0)
growth_V <- ggplot(data = v600e, aes(x = Days, y = `Cell Number`, group = `Treatment Schedule`, color = `Treatment Schedule`, shape = `Treatment Schedule`))+
geom_abline(slope = 0, intercept = 0, color = "#a2a2a2")+
stat_summary(geom = "line", fun.y = mean, aes(linetype = `Treatment Schedule`), size = linesize)+
stat_summary(geom = "point", fun.y = mean, size = pointsize)+
stat_summary(geom = "errorbar", fun.data = mean_se, size = errorsize, show.legend = FALSE, width = errorwidth, linetype = 1)+
scale_x_continuous(breaks = c(0, 7, 14, 21, 28))+
scale_y_continuous(name = "Relative Number of Cells", breaks = c(0, base_line$x, base_line$x*3, base_line$x*6, base_line$x*9, base_line$x*12, base_line$x*15),  labels = c(0, 1, 3, 6, 9, 12,15))+
scale_color_manual(values = c("#424242", "#ca0020"))+
coord_cartesian(ylim=c(0, base_line$x*15))+
#ggtitle(TeX("\\textbf{BRAF^{V600E}}"))+
theme_int_dosing(base_size = basesize,  legend = c(.2, .9), legend_direction = "vertical")+
theme(legend.key.width = unit(.7, "in"), legend.key.height = unit(.3, "in"))
pb <- growth_data %>% filter(Sample == "Vector Control")
mean_agg <- pb$`Cell Number` %>% aggregate(by = list(sample = pb$Sample, schedule = pb$`Treatment Schedule`, day = pb$Days), mean)
base_line = mean_agg %>% filter(schedule == "Continuous", day == 0)
growth_PB <- ggplot(data = pb, aes(x = Days, y = `Cell Number`, group = `Treatment Schedule`, color = `Treatment Schedule`, shape = `Treatment Schedule`))+
geom_abline(slope = 0, intercept = 0, color = "#a2a2a2")+
stat_summary(geom = "line", fun.y = mean, aes(linetype = `Treatment Schedule`), size = linesize)+
stat_summary(geom = "point", fun.y = mean, size = pointsize)+
stat_summary(geom = "errorbar", fun.data = mean_se, size = errorsize, show.legend = FALSE, width = errorwidth, linetype = 1)+
scale_x_continuous(breaks = c(0, 7, 14, 21, 28))+
scale_color_manual(values = c("#424242", "#ca0020"))+
scale_y_continuous(name = "Normalized Cell Number", breaks = c(0, base_line$x, base_line$x*3, base_line$x*6, base_line$x*9, base_line$x*12, base_line$x*15),  labels = c(0, 1, 3, 6, 9, 12,15))+
coord_cartesian(ylim=c(0, base_line$x*15))+
ggtitle("Vector Control")+
theme_int_dosing(base_size = basesize, legend = c(.2, .9), legend_direction = "vertical")+
theme(legend.key.width = unit(.7, "in"), legend.key.height = unit(.3, "in"))
#plot_grid(growth_PB, growth_V, ncol =2)
plot(growth_V)
dev.copy2eps(file = "~/Desktop/powerpoint/growth_continuous.eps", width = 8, height = 8)
v600e <- growth_data %>% filter(Sample == "V600E")
mean_agg <- v600e$`Cell Number` %>% aggregate(by = list(sample = v600e$Sample, schedule = v600e$`Treatment Schedule`, day = v600e$Days), mean)
base_line = mean_agg %>% filter(schedule == "Continuous", day == 0)
growth_V <- ggplot(data = v600e, aes(x = Days, y = `Cell Number`, group = `Treatment Schedule`, color = `Treatment Schedule`, shape = `Treatment Schedule`))+
geom_abline(slope = 0, intercept = 0, color = "#a2a2a2")+
stat_summary(geom = "line", fun.y = mean, aes(linetype = `Treatment Schedule`), size = linesize)+
stat_summary(geom = "point", fun.y = mean, size = pointsize)+
stat_summary(geom = "errorbar", fun.data = mean_se, size = errorsize, show.legend = FALSE, width = errorwidth, linetype = 1)+
scale_x_continuous(breaks = c(0, 7, 14, 21, 28))+
scale_y_continuous(name = "Relative Number of Cells", breaks = c(0, base_line$x, base_line$x*3, base_line$x*6, base_line$x*9, base_line$x*12, base_line$x*15),  labels = c(0, 1, 3, 6, 9, 12,15), expand = c(0,0))+
scale_color_manual(values = c("#424242", "#ca0020"))+
coord_cartesian(ylim=c(0, base_line$x*15))+
#ggtitle(TeX("\\textbf{BRAF^{V600E}}"))+
theme_int_dosing(base_size = basesize,  legend = c(.2, .9), legend_direction = "vertical")+
theme(legend.key.width = unit(.7, "in"), legend.key.height = unit(.3, "in"), axis.title = element_text(size = rel(1.3)))
pb <- growth_data %>% filter(Sample == "Vector Control")
mean_agg <- pb$`Cell Number` %>% aggregate(by = list(sample = pb$Sample, schedule = pb$`Treatment Schedule`, day = pb$Days), mean)
base_line = mean_agg %>% filter(schedule == "Continuous", day == 0)
growth_PB <- ggplot(data = pb, aes(x = Days, y = `Cell Number`, group = `Treatment Schedule`, color = `Treatment Schedule`, shape = `Treatment Schedule`))+
geom_abline(slope = 0, intercept = 0, color = "#a2a2a2")+
stat_summary(geom = "line", fun.y = mean, aes(linetype = `Treatment Schedule`), size = linesize)+
stat_summary(geom = "point", fun.y = mean, size = pointsize)+
stat_summary(geom = "errorbar", fun.data = mean_se, size = errorsize, show.legend = FALSE, width = errorwidth, linetype = 1)+
scale_x_continuous(breaks = c(0, 7, 14, 21, 28))+
scale_color_manual(values = c("#424242", "#ca0020"))+
scale_y_continuous(name = "Normalized Cell Number", breaks = c(0, base_line$x, base_line$x*3, base_line$x*6, base_line$x*9, base_line$x*12, base_line$x*15),  labels = c(0, 1, 3, 6, 9, 12,15))+
coord_cartesian(ylim=c(0, base_line$x*15))+
ggtitle("Vector Control")+
theme_int_dosing(base_size = basesize, legend = c(.2, .9), legend_direction = "vertical")+
theme(legend.key.width = unit(.7, "in"), legend.key.height = unit(.3, "in"))
#plot_grid(growth_PB, growth_V, ncol =2)
plot(growth_V)
dev.copy2eps(file = "~/Desktop/powerpoint/growth_continuous.eps", width = 8, height = 8)
library(tidyverse)
library(ggthemes)
source('~/Google Drive/research/intermittent_dosing/Figures/theme_int_dosing.R', echo=TRUE)
growth_data <- read_csv("/Users/Andy/Google Drive/research/intermittent_dosing/wm1617_intermittent_dosing/aggregated_growth_data.csv", col_types = "ncncc")
growth_data$line = factor(growth_data$line, levels = c("WM1617 WT", "WM1617 V600E"))
growth_data$norm_numb = growth_data$cell_number/growth_data$density
ggplot(growth_data, aes(x = week, y = norm_numb, group = schedule, color = schedule))+
geom_point()+
stat_summary(geom = "line", fun.y = "mean", size = 1)+
facet_grid(rows = vars(density), cols = vars(line))+
scale_y_continuous(name = "Relative Cell Number")+
scale_x_discrete(name = "Week")+
scale_color_manual("Schedule", values= c("continuous" = "#222222", "intermittent" = "#c93814"))+
theme_few()+
theme(aspect.ratio = .7)
#theme_int_dosing(aspect = .7, legend = "right", legend_direction = "vertical")
ggsave("~/Google Drive/research/intermittent_dosing/Notebook/2019.04.05/WM1617_Week3_CellNumber.pdf")
library(tidyverse)
library(ggthemes)
source('~/Google Drive/research/intermittent_dosing/Figures/theme_int_dosing.R', echo=TRUE)
growth_data <- read_csv("/Users/Andy/Google Drive/research/intermittent_dosing/wm1617_intermittent_dosing/aggregated_growth_data.csv", col_types = "ncncc")
growth_data$line = factor(growth_data$line, levels = c("WM1617 WT", "WM1617 V600E"))
growth_data$norm_numb = growth_data$cell_number/growth_data$density
ggplot(growth_data, aes(x = week, y = norm_numb, group = schedule, color = schedule))+
geom_point()+
stat_summary(geom = "line", fun.y = "mean", size = 1)+
facet_grid(rows = vars(density), cols = vars(line))+
scale_y_continuous(name = "Relative Cell Number")+
scale_x_discrete(name = "Week")+
scale_color_manual("Schedule", values= c("continuous" = "#222222", "intermittent" = "#c93814"))+
theme_few()+
theme(aspect.ratio = .7)
#theme_int_dosing(aspect = .7, legend = "right", legend_direction = "vertical")
ggsave("~/Google Drive/research/intermittent_dosing/Notebook/2019.04.12/WM1617_Week4_CellNumber.pdf")
ggplot(growth_data, aes(x = week, y = norm_numb, group = schedule, color = schedule))+
geom_point()+
stat_summary(geom = "line", fun.y = "mean", size = 1)+
facet_grid(rows = vars(density), cols = vars(line))+
scale_y_continuous(name = "Relative Cell Number")+
scale_x_discrete(name = "Week")+
scale_color_manual("Schedule", values= c("continuous" = "#222222", "intermittent" = "#c93814"))+
theme_few()+
theme(aspect.ratio = .7)
#theme_int_dosing(aspect = .7, legend = "right", legend_direction = "vertical")
ggsave("~/Google Drive/research/intermittent_dosing/Notebook/2019.04.12/WM1617_Week4_CellNumber.pdf")
setwd("~/Google Drive/Grad.Research/Atlas-Analysis/github_code/code")
library(tidyverse)
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = Level %>% as.integer)
raw_healthy_tissue_data
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data <- raw_healthy_tissue_data %>% spread(tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total)
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data %<>% spread(tissue_type, level)
healthy_tissue_data %<>% spread(., tissue_type, level)
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data %<>% spread(., tissue_type, level)
healthy_tissue_data %<>% spread(raw_healthy_tissue_data, tissue_type, level)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data %>% spread(raw_healthy_tissue_data, tissue_type, level)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total)
cancer_data <- spread(raw_cancer_data, tissue_type, level)
raw_cancer_data
raw_cancer_data
raw_cancer_data %<>% spread(level, expression_level)
raw_cancer_data
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total)
raw_cancer_data %<>% spread(level, expression_level, -c(count, total))
raw_cancer_data
raw_cancer_data %<>% spread(level, expression_level, -total, -count)
?spread
raw_cancer_data %<>% spread(level, expression_level, -count)
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total)
raw_cancer_data %<>% spread(level, expression_level, -count)
raw_cancer_data
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data
?mutate
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
raw_cancer_data
raw_cancer_data %<>% spread(level, expression_level
raw_cancer_data
raw_cancer_data %<>% spread(level, expression_level)
raw_cancer_data
cancer_data <- raw_cancer_data %>% mutate(expresssion_level = `0` + `1` + `2` + `3`)
cancer_data
cancer_data <- raw_cancer_data %>% transmutate(expresssion_level = `0` + `1` + `2` + `3`)
cancer_data <- raw_cancer_data %>% transmute(expresssion_level = `0` + `1` + `2` + `3`)
cancer_data
raw_cancer_data
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expresssion_level = `0` + `1` + `2` + `3`)
cancer_data
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data
cancer_data %<>% spread(tumor, expression_level)
cancer_data
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expression_level = `0` + `1` + `2` + `3`)
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data %<>% spread(tumor, expresssion_level)
cancer_data %<>% spread(tumor, expression_level)
cancer_data
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
raw_cancer_data %<>% spread(level, expression_level)
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expression_level = `0` + `1` + `2` + `3`)
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data %<>% spread(tumor, expression_level)
cancer_data %>% write_csv('../raw_data/cancer_tissues_metadata.csv')
hint_raw_list <- read_tsv("../raw_data/HomoSapiens_binary_hq_downloaded_2019_04_13.txt")
?read_tsv
ensembl_mapping_list <- read_tsv("../raw_data/HGNC_ensembl_names_from_atlas_as_input.txt")
ensembl_mapping_list
are_duplicated_ensembl_IDs = ensembl_mapping_list$`Ensembl gene ID` %>% duplicated()
are_duplicated_ensembl_IDs = ensembl_mapping_list$`Ensembl gene ID` %>% duplicated()
are_duplicated_ensembl_IDs
are_duplicated_ensembl_IDs = ensembl_mapping_list$`Ensembl gene ID` %>% duplicated %>% sum
are_duplicated_ensembl_IDs
are_duplicated_ensembl_IDs = ensembl_mapping_list$`Ensembl gene ID` %>% duplicated %>% which
are_duplicated_ensembl_IDs
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
?duplicated
are_duplicated_ensembl_IDs_from_last <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated(fromLast = TRUE) %>% which
are_duplicated_ensembl_IDs
are_duplicated_ensembl_IDs_from_last
ensembl_mapping_list <- read_tsv("../raw_data/HGNC_ensembl_names_from_atlas_as_input.txt")
are_duplicated_ensembl_IDs_from_first <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated() %>% which
are_duplicated_ensembl_IDs_from_last <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated(fromLast = TRUE) %>% which
are_duplicated_ensembl_IDs_from_first
are_duplicated_ensembl_IDs_from_last
are_duplicated_ensembl_IDs <- c(are_duplicated_ensembl_IDs_from_first, are_duplicated_ensembl_IDs_from_last) %>% sort
are_duplicated_ensembl_IDs
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
raw_cancer_data %<>% spread(level, expression_level)
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expression_level = `0` + `1` + `2` + `3`)
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data %<>% spread(tumor, expression_level)
cancer_data %>% write_csv('../raw_data/cancer_tissues_metadata.csv')
hint_raw_list <- read_tsv("../raw_data/HomoSapiens_binary_hq_downloaded_2019_04_13.txt")
ensembl_mapping_list <- read_tsv("../raw_data/HGNC_ensembl_names_from_atlas_as_input.txt")
are_duplicated_ensembl_IDs_from_first <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated() %>% which
are_duplicated_ensembl_IDs_from_last <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated(fromLast = TRUE) %>% which
are_duplicated_ensembl_IDs <- c(are_duplicated_ensembl_IDs_from_first, are_duplicated_ensembl_IDs_from_last) %>% sort
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
unique_hint_proteins <- bind_cols(hint_raw_list$Uniprot_A, hint_raw_list$Gene_A, hint_raw_list$ORF_A, hint_raw_list$Alias_A)
unique_hint_proteins <- bind_cols(hint_raw_list$Uniprot_A, hint_raw_list$Gene_A, hint_raw_list$ORF_A, hint_raw_list$Alias_A)
?bind_cols
unique_hint_proteins <- cbind(hint_raw_list$Uniprot_A, hint_raw_list$Gene_A, hint_raw_list$ORF_A, hint_raw_list$Alias_A)
unique_hint_proteins <- rbind(unique_hint_proteins, cbind(hint_raw_list$Uniprot_B, hint_raw_list$Gene_B, hint_raw_list$ORF_B, hint_raw_list$Alias_B))
unique_hint_proteins
unique_hint_proteins <- cbind(hint_raw_list$Uniprot_A, hint_raw_list$Gene_A, hint_raw_list$ORF_A, hint_raw_list$Alias_A)
unique_hint_proteins
unique_hint_proteins <- cbind(hint_raw_list$Uniprot_A, hint_raw_list$Gene_A, hint_raw_list$ORF_A, hint_raw_list$Alias_A) %>% as_data_frame()
unique_hint_proteins
hint_proteins <- data_frame(uniprot = c(hint_raw_list$Uniprot_A, hint_raw_list$Uniprot_B), gene = c(hint_raw_list$Gene_A, hint_raw_list$Gene_B), alias = c(hint_raw_list$Alias_A, hint_raw_list$Alias_B))
hint_proteins
unique_hint_proteins <- data_frame(uniprot = c(hint_raw_list$Uniprot_A, hint_raw_list$Uniprot_B), gene = c(hint_raw_list$Gene_A, hint_raw_list$Gene_B), alias = c(hint_raw_list$Alias_A, hint_raw_list$Alias_B)) %>% unique
unique_hint_proteins
unique_hint_proteins$alias
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(Level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
healthy_tissue_data
raw_healthy_tissue_data
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = "-", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", "_")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
healthy_tissue_data
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$level %<>% str_replace("Not detected", "0")
raw_cancer_data$level %<>% str_replace("High", "3")
raw_cancer_data$level %<>% str_replace("Medium", "2")
raw_cancer_data$level %<>% str_replace("Low", "1")
raw_cancer_data %<>% mutate(level = level %>% as.integer)
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
raw_cancer_data %<>% spread(level, expression_level)
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expression_level = `0` + `1` + `2` + `3`)
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data %<>% spread(tumor, expression_level)
cancer_data %>% write_csv('../raw_data/cancer_tissues_metadata.csv')
unique_ensembl_ids <- c(cancer_data$gene, healthy_tissue_data$gene) %>% unique
unique_ensembl_ids <- rbind(cancer_data$gene, healthy_tissue_data$gene) %>% unique
unique_ensembl_ids <- cbind(cancer_data$gene, healthy_tissue_data$gene) %>% unique
unique_ensembl_ids <- cbind(cancer_data$gene, healthy_tissue_data$gene)
unique_ensembl_ids <- rbind(cancer_data$gene, healthy_tissue_data$gene)
healthy_tissue_data$gene
unique_ensembl_ids <- c(cancer_data$gene, healthy_tissue_data$gene)
unique_ensembl_ids
unique_ensembl_ids <- all_ensembl_ids %>% unique
all_ensembl_ids <- c(cancer_data$gene, healthy_tissue_data$gene)
unique_ensembl_ids <- all_ensembl_ids %>% unique
unique_ensembl_ids
BiocManager::install("ensembldb", version = "3.8")
sessionInfo()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ensembldb", version = "3.8")
all_ensembl_ids <- c(cancer_data$gene, healthy_tissue_data$gene)
unique_ensembl_ids <- all_ensembl_ids %>% unique
unique_ensembl_ids %>% write_delim("../raw_data/ensembl_id.txt")
unique_ensembl_ids %>% as.data.frame %>% write_delim("../raw_data/ensembl_id.txt")
library(EnsDb.Hsapiens.v86)
BiocManager::install("ensembldb", version = "3.8")
library(EnsDb.Hsapiens.v86)
browseVignettes("ensembldb")
library(ensembldb)
sessionInfo()
library(tidyverse)
library(magrittr)
raw_healthy_tissue_data <- read_csv('../raw_data/healthy_tissue_v16.csv')
raw_healthy_tissue_data <- unite(raw_healthy_tissue_data, col = tissue_type, tissue, cell.type, sep = ".", remove = TRUE)
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(" ", ".")
raw_healthy_tissue_data$tissue_type %<>% str_replace_all(",", ".")
raw_healthy_tissue_data$level %<>% str_replace("Not detected", "0")
raw_healthy_tissue_data$level %<>% str_replace("High", "3")
raw_healthy_tissue_data$level %<>% str_replace("Medium", "2")
raw_healthy_tissue_data$level %<>% str_replace("Low", "1")
raw_healthy_tissue_data %<>% mutate(level = level %>% as.integer)
healthy_tissue_data <- spread(raw_healthy_tissue_data, tissue_type, level)
write_csv(healthy_tissue_data, '../raw_data/healthy_tissues_metadata.csv')
raw_cancer_data <- read_csv('../raw_data/cancer_v16.csv')
raw_cancer_data$Level %<>% str_replace("Not detected", "0")
raw_cancer_data$Level %<>% str_replace("High", "3")
raw_cancer_data$Level %<>% str_replace("Medium", "2")
raw_cancer_data$Level %<>% str_replace("Low", "1")
raw_cancer_data %<>% transmute(gene = Gene, gene.name = `Gene name`, tumor = Tumor, level = Level %>% as.integer, count = `Count patients`, total = `Total patients`)
raw_cancer_data %<>% mutate(expression_level = level * count / total, count = NULL, total = NULL)
raw_cancer_data %<>% spread(level, expression_level)
cancer_data <- raw_cancer_data %>% transmute(gene, gene.name, tumor, expression_level = `0` + `1` + `2` + `3`)
cancer_data$tumor %<>% str_replace_all(" ", "_")
cancer_data %<>% spread(tumor, expression_level)
cancer_data %>% write_csv('../raw_data/cancer_tissues_metadata.csv')
all_ensembl_ids <- c(cancer_data$gene, healthy_tissue_data$gene)
unique_ensembl_ids <- all_ensembl_ids %>% unique
unique_ensembl_ids %>% as.data.frame %>% write_delim("../raw_data/ensembl_ids.txt")
hint_raw_list <- read_tsv("../raw_data/HomoSapiens_binary_hq_downloaded_2019_04_13.txt")
hint_raw_list
ensembl_mapping_list <- read_tsv("../raw_data/HGNC_ensembl_names_from_atlas_as_input.txt")
are_duplicated_ensembl_IDs_from_first <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated() %>% which
are_duplicated_ensembl_IDs_from_last <- ensembl_mapping_list$`Ensembl gene ID` %>% duplicated(fromLast = TRUE) %>% which
are_duplicated_ensembl_IDs <- c(are_duplicated_ensembl_IDs_from_first, are_duplicated_ensembl_IDs_from_last) %>% sort
ensembl_mapping_list[are_duplicated_ensembl_IDs,]
are_duplicated_uniprot_IDs_from_first <- ensembl_mapping_list$`UniProt accession`%>% duplicated() %>% which
are_duplicated_uniprot_IDs_from_last <- ensembl_mapping_list$`UniProt accession` %>% duplicated(fromLast = TRUE) %>% which
are_duplicated_uniprot_IDs <- c(are_duplicated_uniprot_IDs_from_first, are_duplicated_uniprot_IDs_from_last) %>% sort
ensembl_mapping_list[are_duplicated_uniprot_IDs,]
unique_hint_proteins <- tibble(uniprot = c(hint_raw_list$Uniprot_A, hint_raw_list$Uniprot_B), gene = c(hint_raw_list$Gene_A, hint_raw_list$Gene_B), alias = c(hint_raw_list$Alias_A, hint_raw_list$Alias_B)) %>% unique
unique_hint_proteins
colnames(ensembl_mapping_list)[c(2,4,5)] <- c("gene", "ensembl_id", "uniprot")
protein_atlas_in_hint_uniprot <- semi_join(ensembl_mapping_list, unique_hint_proteins, by = "uniprot")
protein_atlas_no_uniprot_match<- anti_join(ensembl_mapping_list, unique_hint_proteins, by = "uniprot")
protein_atlas_no_uni_match_no_uni_key <- protein_atlas_no_uniprot_match$uniprot %>% is.na %>% which %>% protein_atlas_no_uniprot_match[.,]
#let's see if we can map those without a uniprot key can match by gene name instead.
gene_name_matched<- protein_atlas_no_uni_match_no_uni_key$gene %in% unique_hint_proteins$gene %>% which %>% protein_atlas_no_uni_match_no_uni_key[.,]
index_in_hint_list <- gene_name_matched$gene %>% match(., unique_hint_proteins$gene)
gene_name_matched %<>% mutate(uniprot = unique_hint_proteins$uniprot[index_in_hint_list])
protein_atlas_in_hint <- bind_rows(protein_atlas_in_hint_uniprot, gene_name_matched)
uniprot_mapping_frequency <- array(data = 0, dim = dim(unique_hint_proteins)[1])
for(ii in 1:dim(unique_hint_proteins)[1]){
current_uniprot_id <- unique_hint_proteins$uniprot[ii]
#find where it occurs in the ensembl to uniprot map
index_mapping <- str_which(protein_atlas_in_hint$uniprot, current_uniprot_id)
number_mappings <- length(index_mapping)
if(is_empty(number_mappings) != TRUE){
uniprot_mapping_frequency[ii] = number_mappings
}
}
table(uniprot_mapping_frequency)
sum(uniprot_mapping_frequency > 1)
multiple_ensembl_matches <- which(uniprot_mapping_frequency>1)
multiple_ensembl_map_indices <- array(dim = 0)
for(ii in multiple_ensembl_matches){
current_uniprot_id <- unique_hint_proteins$uniprot[ii]
#find where it occurs in the ensembl to uniprot map
ensembl_indices <- str_which(protein_atlas_in_hint$uniprot, current_uniprot_id)
multiple_ensembl_map_indices %<>% append(., ensembl_indices)
}
protein_atlas_in_hint[multiple_ensembl_map_indices,]
sorted_ensembl_mapping_list_in_network <- protein_atlas_in_hint %>% arrange(uniprot)
sorted_unique_hint_proteins <- unique_hint_proteins %>% arrange(uniprot)
combined_map <- right_join(sorted_unique_hint_proteins,
sorted_ensembl_mapping_list_in_network, by = "uniprot")
combined_map <- combined_map[,-c(4,6)]
unique_combined_uniprot <- combined_map$uniprot %>% unique
uniprot_int_ids <- as.list(0:(length(unique_combined_uniprot)-1))
names(uniprot_int_ids) <- unique_combined_uniprot
removed_nodes <- base::setdiff(unique_hint_proteins$uniprot, unique_combined_uniprot)
uniprot_int_ids %<>% c(.,length(unique_combined_uniprot):(length(unique_combined_uniprot)+length(removed_nodes)-1))
names(uniprot_int_ids)[(length(unique_combined_uniprot)+1):(length(uniprot_int_ids))] <- removed_nodes
int_id <- uniprot_int_ids[combined_map$uniprot] %>% unlist(use.names = FALSE)
combined_map %<>% bind_cols(int_id = int_id, .)
combined_map %>% write_csv("../data/id_uniprot_ensembl_map.csv")
int_id
int_id %>% length
uniprot_int_ids
uniprot_int_ids %>% length()
sorted_unique_hint_proteins
all_nodes_in_network_map <- uniprot_int_ids[sorted_unique_hint_proteins$uniprot] %>% unlist(use.names = FALSE)
all_nodes_in_network_map
all_nodes_in_network_map %>% max
all_nodes_in_network_map %<>% bind_cols(int_id = ., uniprot = sorted_unique_hint_proteins$uniprot, name = sorted_unique_hint_proteins$gene)
all_nodes_in_network_map
all_nodes_in_network_map %<>% arrange(int_id)
all_nodes_in_network_map
int_id[1]
uniprot_int_ids[1]
write_csv("../data/all_hint_nodes_names.csv")
all_nodes_in_network_map %>% write_csv("../data/all_hint_nodes_names.csv")
